{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww14200\viewh8000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Notes on Implementing Quantum Loop Grav Eqn Solver\
\

\b0 Quantum Behavior setting is currently using Eqn 75.\
\
Classical Behavior is using unmodified Friedman eons\
\
Friedman.m function is not being accessed right now, this got folded into equations.m\
\
\

\b Integrals need to be re-performed after each runge-kutta step. This is because the values for a, a_dd, etc will change after each step, thus changing the value of not just the current integral step, but also past steps. \
\

\b0 \
\
We start initial conditions in domain when classical sol is valid, integral is very small. \
\
First step is regular runge-kutta step. Second step as well. \
\
Then, can calculate first first deriv entry from first two steps. Second first deriv entry from 2nd -> 3rd step. Third from 3rd->4th, etc. 
\b Gets first deriv. \
\

\b0 \
\
Diagram: x\'92s represent a(t) vans. o\'92s represent first deriv vals, z\'92s represent second deriv vals. Left most is start. \
\
x x x x x\
 0 0 0 0\
   z z z\
\
Each element is below the pair of elements that it will be averaging. So, we do not get the first second deriv entry until 
\b after
\b0  the third a(t) entry is calculated. The hope is that each entry is close enough to the previous one that this doesn\'92t cause much inaccuracy. \
\
These came out looking like I expected them to. Could fill in the NaN slots at the beginning and ends, but I don\'92t think it\'92s going to affect the way the plot looks. \
\

\b TODO: make causal_nonlocal_int work with a FUNCTION of scale factor function objects as its \'91f\'92, or the function it is \'91multiplying\'92 script L by. \
\
If it asks for values in first and second deriv that are NaN, I will know I need to stop the integral sooner. The values in the derivatives lag the values in a(t), so we cannot calculate integral steps all the way to most recent t. \
\

\b0 I have passed f, the R function, a number where I want it evaluated. Since f only takes function objects, what it really needs is an index to grab the right number from the function object. This job was performed by i, and widthSlice. \
\
I wrote lines in causal_nonlocal that calculate the index to look up from the t value. This is passed to the simpsons rule calc line.\
\

\b Now, the indexes being used to look up old values of scale factor derivatives in calls to f are off. They often hit the few NaN slots that are still on the ends of the derivative arrays. I also don\'92t think they are always grabbing numbers corresponding to each other. For example, it could grab the 8th scale factor point, 7th first deriv, and 6th second deriv. At least when it is addressing the history of the function, it doesn\'92t need to do this. 
\b0 \
}